<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Documentation on Izydog documentation</title><link>/docs/</link><description>Recent content in Documentation on Izydog documentation</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 10 Oct 2022 02:21:15 +0000</lastBuildDate><atom:link href="/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>/docs/overview/</link><pubDate>Fri, 30 Sep 2022 05:33:22 +0100</pubDate><guid>/docs/overview/</guid><description>This documentation provides an overview of the architecture of the application and the technologies used to implement it. It is intended for developers and technical team members who are involved in designing, building, and maintaining the application.
The documentation covers the high-level architecture of the application, including its components, data flows, and interactions between different parts. It also includes detailed information on the technology stack used to implement the application, such as programming languages, frameworks, libraries, and databases.</description></item><item><title>Quickstart</title><link>/docs/quickstart/</link><pubDate>Thu, 08 Jun 2023 19:25:22 +0100</pubDate><guid>/docs/quickstart/</guid><description>Requirements link git Go ≥ v1.19 Hugo ≥ v0.100.0 (Extended Version) Install Hugo linkInstall the Hugo CLI, using the specific instructions for your operating system below:
Linux Homebrew (macOS) Windows (Chocolatey) Windows (Scoop) Your Linux distro’s package manager may include Hugo. If this is the case, install it directly using your distro’s package manager – for instance, in Ubuntu, run the following command. This will install the extended edition of Hugo:</description></item><item><title>Architecture of plateform</title><link>/docs/architecture/</link><pubDate>Thu, 08 Jun 2023 19:25:22 +0100</pubDate><guid>/docs/architecture/</guid><description>This documentation provides an overview of the architecture of the application and the technologies used to implement it. It is intended for developers and technical team members who are involved in designing, building, and maintaining the application.
Architecture design link Agregator link In a microservices-based architecture, the aggregator is a component that collects and combines data from multiple different microservices to provide a consistent and complete view of information. It will also perform data transformation and filtering operations, as well as manage data caching to improve performance and reduce load on underlying services.</description></item><item><title>Deployment</title><link>/docs/deployment/</link><pubDate>Thu, 08 Jun 2023 19:25:22 +0100</pubDate><guid>/docs/deployment/</guid><description>Here are the deployment steps on the hosting platform of Izydog company
warning Editing in progress: This page need to be tested and validate or fix it Database migrations linkNeeds to be redacted
Setup new application linkAdding new apps is done in 2 steps :
Application containerization linkIf you application is based on the app template, it must have already have a Dockerfile and the corresponding CI in order to build and push your app docker image into the registry.</description></item></channel></rss>